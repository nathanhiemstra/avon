//
// Buttons
// --------------------------------------------------

// Base styles
// --------------------------------------------------

.btn {
  display: inline-block;
  margin-bottom: 0;

  // For input.btn
  font-weight: $btn-font-weight;
  letter-spacing: $btn-letter-spacing;

  .dropdown & {
    letter-spacing: normal;
  }

  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;

  // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 2px solid transparent;

  @include button-size($btn-padding-base-vertical, $btn-padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  @include user-select(none);

  &,
  &.active,
  &:active {
    &.focus,
    &:focus {
      @include tab-focus;
    }
  }

  &.focus,
  &:focus,
  &:hover {
    color: $btn-default-hover-color;
    text-decoration: none;
  }

  &.active,
  &:active {
    outline: 0;
    background-image: none;

    @include box-shadow(inset 0 3px 5px rgba(0, 0, 0, 0.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    border-color: $btn-disabled-border;

    @include box-shadow(none);
  }

  // [converter] extracted a& to a.btn
}

a.btn {
  &.disabled,
  fieldset[disabled] & {
    pointer-events: none;

    // Future-proof disabling of clicks on `<a>` elements

  }
}

// Alternate buttons
// --------------------------------------------------

.btn-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    color: $btn-disabled-color;

    &.focus,
    &:focus,
    &:hover {
      border-color: $btn-disabled-bg;
      color: $btn-disabled-bg;
    }
  }

  &:active,
  &:focus,
  &:hover {
    color: darken($btn-default-color, 12%);
    background-color: transparent;
  }
}

.btn-primary {
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    background-color: $btn-disabled-bg;

    &.focus,
    &:focus,
    &:hover {
      background-color: $btn-disabled-bg;
      border-color: $btn-disabled-bg;
    }
  }
}

// transparent light has a trasparent bg with light border & text and a thinner border & text
.btn-transparent-light {
  @include button-variant($btn-success-color, transparent, $btn-success-color);

  border-width: 1px;
  border-style: solid;
  font-weight: 100;
}

// Discourage - black
.btn-discourage {
  @include button-variant($btn-discourage-color, $btn-discourage-bg, $btn-discourage-border);

  &[disabled],
  fieldset[disabled] & {
    color: $btn-link-disabled-color;

    &:focus,
    &:hover {
      color: $btn-link-disabled-color;
      border-color: $btn-link-disabled-color;
    }
  }
}

// Success appears as green
.btn-success {
  @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}

// Info appears as blue-green
.btn-info {
  @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}

// Warning appears as orange
.btn-warning {
  @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}

// Danger and error appear as red
.btn-danger {
  @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

// Avon Custom Buttons
// --------------------------------------------------

// Primary responsive looks like .btn-primary on small screens but has a custom look on large screens
.btn-primary-responsive {
  @extend .btn-primary;

  // dropdowns
  .dropdown-menu {
    background-color: $brand-primary;

    li a {
      color: $white;
    }
  }

  i,
  i:after,
  i:before {
    line-height: 0;

    // prevent larger icons increasing button height

  }

  &:focus,
   > i:before,
   > span,
   > span:before,
  &:hover,
  > i {
    background-color: $brand-primary !important;
    color: $white !important;
  }

  // desktop
  @media (min-width: $screen-sm-min) {
    background-color: transparent;
    color: $brand-primary;

    // dropdowns
    .dropdown-menu {
      background-color: transparent;

      li a {
        color: $brand-primary;
      }
    }

    &:focus,
     > i:before,
     > span,
     > span:before,
    &:hover,
    > i {
      background-color: transparent !important;
      color: $brand-primary !important;
    }
  }
}

// Transparent light responsive looks like .btn-transparent-light on small
// screens but has a custom look on large screens
.btn-trans-light-responsive {
  @extend .btn-transparent-light;

  letter-spacing: 0.1px;

  small,
  span,
  strong {
    vertical-align: middle;
  }

  strong {
    white-space: nowrap;
  }

  // dropdowns
  .dropdown-menu {
    background-color: transparent;

    li a {
      color: $white;
    }
  }

  i,
  i:after,
  i:before {
    line-height: 0;

    // prevent larger icons increasing button height

  }

  &:focus,
   > i:before,
   > span,
   > span:before,
  &:hover,
  > i {
    background-color: transparent !important;
    color: $white !important;
  }

  // tiny
  @media (max-width: $screen-tiny-min) {
    strong {
      display: block;
      margin-top: 3px;
    }
  }

  // tiny-plus
  @media (max-width: $screen-tiny-plus) {
    padding: 10px 5px !important;
  }

  // desktop
  @media (min-width: $breakpoint-header-min) {
    background-color: transparent;
    letter-spacing: 0.9px;
    color: $brand-primary;

    // strong {
    //   font-size: $font-size-small;
    // }

    // dropdowns
    .dropdown-menu {
      background-color: transparent;

      li a {
        color: $brand-primary;
      }
    }

    &:focus,
     > i:before,
     > span,
     > span:before,
    &:active,
    &:hover,
    > i {
      background-color: transparent !important;
      color: $brand-primary !important;
      border: 1px solid transparent !important;
      border-color: transparent !important;
    }
  }
}

// utilities

.btn-bottom-align {
  vertical-align: bottom;
}

.btn-full-width {
  width: 100%;
}

.button-full-width-mobile {
  @media (max-width: $screen-xs-max) {
    width: 100%;
  }
}

// button that looks like a select
.btn-select {
  border: 1px solid $gray-light;
  box-shadow: none;
  text-transform: none;
  text-align: left;
  color: $text-color;
  padding: $btn-padding-small-vertical $btn-padding-small-horizontal;
  letter-spacing: 0.1px;
  height: 100%;
  font-weight: normal;
  background-color: $body-bg;

  &:focus,
  &:hover {
    color: $text-color;
  }

  .form-control-feedback {
    line-height: $input-height-base;
  }
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link {
  color: $link-color;
  font-weight: normal;
  border-radius: 0;

  &,
  &.active,
  &:active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;

    @include box-shadow(none);
  }

  &,
  &:active,
  &:focus,
  &:hover {
    border-color: transparent;
  }

  &:focus,
  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }

  &[disabled],
  fieldset[disabled] & {
    &:focus,
    &:hover {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

// Button Sizes
// --------------------------------------------------

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($btn-padding-large-vertical, $btn-padding-large-horizontal, $font-size-base, $line-height-large, $btn-border-radius-large);
}

.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($btn-padding-small-vertical, $btn-padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

.btn-xs {
  @include button-size($btn-padding-xs-vertical, $btn-padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

// soft modifier - button with normal text, thinner border and slightly rounded corners
.btn-soft {
  border-radius: $border-radius-secondary;
  border-width: 1px;
  text-transform: none;
  letter-spacing: 0;
}

.btn-outlined {
  border-radius: 0;
  border-width: 1px;
  border-color: $gray;
  text-transform: none;
}

// Block button
// --------------------------------------------------

.btn-block {
  display: block;
  width: 100%;
}

@media (min-width: $screen-sm-min) {
  .btn-block-sm {
    display: block;
    width: 100%;
  }
}

@media (min-width: $screen-md-min) {
  .btn-block-md {
    display: block;
    width: 100%;
  }
}

@media (min-width: $screen-lg-min) {
  .btn-block-lg {
    display: block;
    width: 100%;
  }
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Back to Top - Global Button
.btn-back-to-top {
  position: fixed;
  bottom: 24px;
  right: 12px;
  z-index: $zindex-modal-background;
  width: 54px;
  height: 54px;
  border-radius: 50%;
  border-width: 1px;
  background-color: rgba($body-bg, 0.95);
  border-color: $gray-light;
  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.18);
  color: $gray;
  font-size: 13px;
  font-weight: 500;
  letter-spacing: normal;
  opacity: 1;
  pointer-events: all;
  transition: opacity $ui-animation-time*1.5 ease;

  &.invisible {
    visibility: visible;
    pointer-events: none;
    opacity: 0;
  }

  .lt-icon {
    &:after,
    &:before {
      color: $gray;
      transition: color $ui-animation-time*1.5 ease;
    }
  }

  span {
    margin-left: 1px;
    transition: color $ui-animation-time*1.5 ease;

    &:not(.lt-icon) {
      margin-top: -6px;
      margin-bottom: 5px;
    }
  }

  &:hover {
    color: $text-color;

    .lt-icon {
      &:after,
      &:before {
        color: $text-color;
      }
    }
  }

  // desktop
  @media (min-width: $screen-sm-min) {
    bottom: 24px;
    right: 22px;
  }

}

// Button with loading indicator - for ajax operations
.btn-loader {

  transition: background-color $ui-animation-time $ui-animation-ease;

  &.loading {
    .spinner,
    .spinner:after,
    .alert-icon,
    .alert-icon:after {
      border-radius: 50%;
      width: 24px;
      height: 24px;
    }

    .spinner {
      display: flex;
      margin: 0 auto;
      position: relative;
      text-indent: -9999em;
      border-top: 2px solid $brand-alt;
      border-right: 2px solid $brand-alt;
      border-bottom: 2px solid $brand-alt;
      border-left: 2px solid $body-bg;
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      transform: translateZ(0);
      -webkit-animation: rotate 1.1s infinite linear;
      animation: rotate 1.1s infinite linear;
    }

    .alert-icon {
      display: none;
      justify-content: center;
      margin: 0 auto;
      color: $brand-primary;
      opacity: 0;
      font-weight: 700;
    }

    // variations
    &.btn-primary {
      background-color: $brand-primary;
      border-color: $brand-primary;
    }

    &.btn-default {
      background-color: $body-bg;
      border-color: $brand-primary;

      .spinner {
        border-top: 2px solid $gray-light;
        border-right: 2px solid $gray-light;
        border-bottom: 2px solid $gray-light;
        border-left: 2px solid $brand-primary;
      }

    }

  }
  // end .loading

  &.loaded {

    .spinner {
      display: none;
    }

    .alert-icon {
      display: inline-block;
      opacity: 1;
      animation: fadein $ui-animation-time forwards linear;
    }

    &.btn-default {
      .alert-icon {
        background-color: $brand-primary;
        color: $body-bg;
      }
    }

  }

}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@-webkit-keyframes rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
