//
// Scaffolding
// --------------------------------------------------

// Reset the box-sizing
//
// Heads up! This reset may cause conflicts with some third-party widgets.
// For recommendations on resolving such conflicts, see
// http://getbootstrap.com/getting-started/#third-box-sizing
* {
  @include box-sizing(border-box);
}

*:after,
*:before {
  @include box-sizing(border-box);
}

// Body reset

html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $text-color;
  background-color: $body-bg;
}

.container {
  &.container--breadcrumb {
    // + :not(.alert-dismissable) {
    padding-top: $spacing-4;

    // }

    margin-bottom: -0.5rem;
  }

  &.container--page {
    margin-top: $spacing-page-top;

    h1:first-of-type,
    h2:first-of-type,
    h3:first-of-type {
      margin-top: 0;
    }

    // on mobile, secondary nav aside should butt up to header
    aside.secondary-nav {
      margin-top: -$spacing-page-top;

      // on desktop, it should have no negative margin
      @media (min-width: $screen-sm-min) {
        margin-top: 0;
      }
    }

    // account for other elements here with an optional page-inner class
    // we can use .page-inner to provide proper top spacing for any odd
    // content that doesn't fit the format above
    .page-inner {
      margin-top: 1rem;
    }
  }

  // For pages with little content
  &.container--min-height {
    min-height: 22rem;
  }

  // pages which contain our 'secondary' nav - .navbar-secondary
  &.container--secondary-nav {
    margin-top: 0;
  }
}

// account for aside and main in pages with breadcrumbs
.container--breadcrumb + .container--page {
  aside, main {
    margin-top: 0.5rem;
  }
}

// slim variation on main container
main.slim {
  .container {
    max-width: $container-slim-width;
  }
}

// Reset fonts for relevant elements
button,
input,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

// Default Links - for more link styles, see _links.scss

a {
  color: $link-color;
  text-decoration: none;

  &:focus,
  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    @include tab-focus;
  }

  &:hover {
    cursor: pointer;
  }
}

// Figures
//
// We reset this here because previously Normalize had no `figure` margins. This
// ensures we don't break anyone's use of the element.

figure {
  margin: 0;
}

// Images

img {
  vertical-align: middle;
}

// Responsive images (ensure images don't scale beyond their parents)
.img-responsive {
  @include img-responsive;

  // modifier to make max-width 50% on desktop
  &--50 {
    max-width: 100%;

    // 50% for larger screens
    @media (min-width: $screen-xs-min) {
      max-width: 50%;
    }
  }
}

// Rounded corners
.img-rounded {
  border-radius: $border-radius-large;
}

// Image thumbnails
//
// Heads up! This is mixin-ed into thumbnails.less for `.thumbnail`.
.img-thumbnail {
  padding: $thumbnail-padding;
  line-height: $line-height-base;
  background-color: $thumbnail-bg;
  border: 1px solid $thumbnail-border;
  border-radius: $thumbnail-border-radius;

  @include transition(all 0.2s ease-in-out);

  // Keep them at most 100% wide
  @include img-responsive(inline-block);
}

// Perfect circle
.img-circle {
  border-radius: 50%;

  // set radius in percents
}

.img-min-xs {
  min-width: 60px;
}

.img-min-sm {
  min-width: 100px;
}

.img-min-md {
  min-width: 150px;
}

.img-min-lg {
  min-width: 200px;
}

// Horizontal rules

hr {
  // 28px
  margin-top: $line-height-computed * 1.03704;

  // 28px
  margin-bottom: $line-height-computed * 1.03704;
  border: 0;
  border-top: 1px solid $hr-border;
}

// Only display content to screen readers
//
// See: http://a11yproject.com/posts/how-to-hide-content

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}

// iOS "clickable elements" fix for role="button"
//
// Fixes "clickability" issue (and more generally, the firing of events such as focus as well)
// for traditionally non-focusable elements with role="button"
// see https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

[role="button"] {
  cursor: pointer;
}