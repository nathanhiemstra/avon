// prevent background scrolling when drawer open
html {
  &.drawer-open {
    overflow-y: hidden;
  }
}

.drawer,
.drawer-height,
.drawer-summary {
  height: $navbar-drawer-height;
  min-height: $navbar-drawer-height;

  @media (min-width: $screen-md-min) {
    height: $navbar-drawer-height-lg;
    min-height: $navbar-drawer-height-lg;
  }
}

.drawer {
  // Hiding for now so popovers will work
  // overflow: hidden;

  &:not(.reverse-bg) {
    background-color: $body-bg;

    &.drawer-compact {
      background-color: transparent;
    }
  }

  @include box-shadow(0 -1px 9px rgba(0, 0, 0, 0.175));

  position: fixed;
  left: 0;
  right: 0;
  z-index: $zindex-drawer-fixed;
  transition: min-height 0.5s ease;

  .drawer-summary-header,
  .drawer-valign-middle {
    line-height: $navbar-drawer-height;

    @media (min-width: $screen-md-min) {
      line-height: $navbar-drawer-height-lg;
    }
  }

  .drawer-summary-header {
    margin: 0;
  }

  &-list-default {
    text-align: center;
    margin-top: 0;
    margin-bottom: 0;

    > li,
    > .list-group-item {
      height: $navbar-drawer-height;

      @media (min-width: $screen-md-min) {
        height: $navbar-drawer-height-lg;
      }

      border-top: 0;
      border-bottom: 0;
    }

    .list-group-item-heading {
      margin-top: 5px;
    }

    // Large screens
    @media (min-width: $screen-md-min) {
      .list-group-item {
        padding-left: 3rem;
        padding-right: 3rem;

        > dl {
          overflow: hidden;
        }
      }
    }

    // Small screens
    @media (max-width: $screen-md-min) {
      > li,
      > .list-group-item {
        padding-top: 0;
        padding-bottom: 0;
        border: none;
      }

      .list-group-item-heading,
      .list-group-item-text {
        display: inline-block;
        line-height: $navbar-drawer-height;
      }

      .list-group-item-heading {
        float: right;
        margin: 0 0 0 0.5rem;
      }

      .list-group-item-text {
        float: left;
      }
    }

    @extend .list-inline-abutted;
  }

  &.drawer-expanded {
    min-height: 100vh;
    overflow-y: scroll;

    .drawer-content {
      min-height: 100vh;
    }

    .drawer-summary {
      display: none;
    }
  }

  &-hidden {
    // TODO :: hiding this temporarily
    display: none;
    height: 100vh;
    opacity: 0;
    pointer-events: none;
    transform: translateY(-100vh);
    transition: 0.5s transform ease;

    .drawer-content {
      display: flex;
      opacity: 0;
      flex-direction: column;
      min-height: 100vh;
      overflow-y: scroll;
      transition: 0.5s opacity ease;
    }

    @media (min-width: $screen-sm-min) {
      height: auto;
      transform: translateY(-100%);

      .drawer-content {
        min-height: auto;
      }
    }

    &.drawer-expanded {
      transform: translateY(0);
      opacity: 1;
      display: none;
      pointer-events: all;

      .drawer-content {
        opacity: 1;
      }

      @media (min-width: $screen-sm-min) {
        height: auto;

        .drawer-content {
          height: auto; // TODO :: update this with js
          min-height: auto;
        }
      }
    }
  }

  &-fixed-top {
    top: 0;
    min-height: 0;

    &.drawer-expanded {
      min-height: auto;
    }
  }

  &-fixed-bottom {
    bottom: 0;
  }
}

/*

DRAWER COMPACT

*/

// config
$drawer-compact-summary-height: 40px;
$drawer-compact-summary-max-width: 320px;
$drawer-compact-max-width: 420px;
$drawer-compact-min-height: 350px;

.drawer-compact {
  box-shadow: none;
  height: $drawer-compact-summary-height;
  min-height: $drawer-compact-summary-height;

  .drawer-summary,
  .drawer-content {
    background-color: $body-bg;
  }

  .drawer-summary {
    width: 100%;
    max-width: $drawer-compact-summary-max-width;
    height: $drawer-compact-summary-height;
    min-height: $drawer-compact-summary-height;
    background-color: $black;
    color: $white;
    transition: 0.5s max-width $ui-animation-ease;
    @include box-shadow(0 -1px 9px rgba(0, 0, 0, 0.175));

    .lt-carat-up {
      transform: scaleY(1);
      transition: 0.5s transform $ui-animation-ease;
    }

    @media (min-width: $screen-sm-min) {
      max-width: $drawer-compact-summary-max-width;
    }
  }

  .drawer-content {
    position: relative;
    @include box-shadow(0 9px 9px rgba(0, 0, 0, 0.175));

    .carousel {
      position: relative;
      height: 100%;

      .carousel-inner {
        height: 100%;

        .item {
          height: 100%;
        }
      }

      .carousel-controls {
        height: $drawer-compact-summary-height;
        opacity: 0;
        transition: 0.5s 0.3s opacity;

        .container-fluid {
          display: flex;
          height: 100%;
          justify-content: space-between;

          @media (min-width: $screen-sm-min) {
            justify-content: start;
          }

          &:before,
          &:after {
            display: none;
          }

          .left {
            order: 1;
          }
          .carousel-index {
            order: 2;

            @media (min-width: $screen-sm-min) {
              order: 3;
            }
          }
          .right {
            order: 3;

            @media (min-width: $screen-sm-min) {
              order: 2;
            }
          }
        }

        a:hover {
          text-decoration: none;
        }

        .current-slide,
        .total-slides {
          display: inline-block;
          min-width: 10px;
          text-align: right;
          transition: 0.5s all $ui-animation-ease;
        }
      }

      .carousel-msg {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: calc(100% - #{$drawer-compact-summary-height});
        opacity: 0;
        transform: translateY(10px);
        background-color: $body-bg;
        pointer-events: none;
        transition: $ui-animation-time * 3 opacity,
          $ui-animation-time * 3 transform ease;

        .carousel-msg_success,
        .carousel-msg_complete {
          display: none;
          align-items: center;

          &.reveal {
            display: flex;
          }
        }

        &.reveal {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }
  }

  &.drawer-expanded {
    // doesn't expand to full height
    @media (min-width: $screen-sm-min) {
      min-height: $drawer-compact-min-height;
      overflow: hidden;
    }

    // show the drawer 'summary' at all times
    .drawer-summary {
      display: block;
      max-width: 100%;

      @media (min-width: $screen-sm-min) {
        max-width: $drawer-compact-summary-max-width;
      }

      .lt-carat-up {
        transform: scaleY(-1);
      }
    }

    .drawer-content {
      height: calc(100% - #{$drawer-compact-summary-height});
      min-height: calc(100% - #{$drawer-compact-summary-height});

      @media (min-width: $screen-sm-min) {
        // overflow-y: hidden;
      }

      .carousel {
        .carousel-controls {
          opacity: 1;
        }
      }
    }
  }

  @media (min-width: $screen-sm-min) {
    width: 50%;
    max-width: $drawer-compact-max-width;
  }
}

// TODO :: make this a drawer class, fixed top but not 100 vertical height content?
#searchDrawer {
  .drawer-content {
    min-height: auto;
  }
  &.drawer-hidden {
    min-height: auto;
    height: auto;
    transform: translateY(-100px);
  }
  &.drawer-expanded {
    transform: translateY(0);
  }
}
